var search_data = {"index":{"searchIndex":["circle","point","rectangle","scene","triangle","add_shape()","area()","area()","area()","new()","new()","new()","new()","new()","remove_shape()","shape_count()","total_area()","readme"],"longSearchIndex":["circle","point","rectangle","scene","triangle","scene#add_shape()","circle#area()","rectangle#area()","triangle#area()","circle::new()","point::new()","rectangle::new()","scene::new()","triangle::new()","scene#remove_shape()","scene#shape_count()","scene#total_area()",""],"info":[["Circle","","Circle.html","","<p>Circle.rb Written by: Noranda Brown Version: 2014.2.24\n"],["Point","","Point.html","","<p>Point.rb Written by: Noranda Brown Version: 2014.2.24\n"],["Rectangle","","Rectangle.html","","<p>Rectangle.rb Written by: Noranda Brown Version: 2014.2.24\n"],["Scene","","Scene.html","",""],["Triangle","","Triangle.html","","<p>Triangle.rb Written by: Noranda Brown Version: 2014.2.24\n"],["add_shape","Scene","Scene.html#method-i-add_shape","(shape)","<p>Adds the given shape to the scene.\n"],["area","Circle","Circle.html#method-i-area","()","<p>Returns the area of the circle in square meters.\n"],["area","Rectangle","Rectangle.html#method-i-area","()","<p>Returns the area of the rectangle in square meters.\n"],["area","Triangle","Triangle.html#method-i-area","()","<p>Returns the area of the triangle in square meters.\n"],["new","Circle","Circle.html#method-c-new","(point, radius)","<p>Initializes a Circle given a point and a radius (float)\n"],["new","Point","Point.html#method-c-new","(x = 0.0, y = 0.0)","<p>Initializes a Point with the given x and y coordinates representing meters\nfrom the origin\n"],["new","Rectangle","Rectangle.html#method-c-new","(p1, p2)","<p>Initializes a Rectangle given two points\n"],["new","Scene","Scene.html#method-c-new","(*shapes)","<p>Initializes a Scene given an array of shapes\n"],["new","Triangle","Triangle.html#method-c-new","(p1, p2, p3)","<p>Initializes a Triangle given three points\n"],["remove_shape","Scene","Scene.html#method-i-remove_shape","(shape)","<p>Removes the given shape from the scene. Duplicates of the same object will\nbe deleted if they exist. â€¦\n"],["shape_count","Scene","Scene.html#method-i-shape_count","()","<p>Returns a count of the number of shapes in the scene.\n"],["total_area","Scene","Scene.html#method-i-total_area","()","<p>Returns the sum of all the areas of the shapes in the scene even if they\noverlap.\n"],["README","","README_md.html","","<p>Assignment: TDD\n<p>]\n]\n<p>Written by: Noranda Brown<br>\nVersion: 2014.2.24\n"]]}}